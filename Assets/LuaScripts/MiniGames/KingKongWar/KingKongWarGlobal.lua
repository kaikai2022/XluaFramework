---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lucus.
--- DateTime: 1/9/2022 7:32 下午
---

local KingKongWarGlobal = BaseClass("KingKongWarGlobal", Singleton)

local mergeTable = {
    {
        name = "SceneConfig",
        global = SceneConfig,
        selfClass = "MiniGames.KingKongWar.Scenes.Config.KingKongWarSceneConfig",
    },
    {
        name = "UIWindowNames",
        global = UIWindowNames,
        selfClass = "MiniGames.KingKongWar.UI.Config.KingKongWarUIWindowNames",
    },
    {
        name = "UIConfig",
        global = UIConfig,
        selfClass = "MiniGames.KingKongWar.UI.Config.KingKongWarUIConfig",
    },
    {
        name = "DataMessageNames",
        global = DataMessageNames,
        selfClass = "MiniGames.KingKongWar.DataCenter.Config.DataMessageNames",
    },

    {
        name = "UIMessageNames",
        global = UIMessageNames,
        selfClass = "MiniGames.KingKongWar.UIMessage.UIMessageNames",
    },
}

function KingKongWarGlobal:Enter()
    ----合并 SceneConfig
    --self.global_SceneConfig = SceneConfig
    --self.kingKongWarGlobal_SceneConfig = require("MiniGames.KingKongWar.Scenes.Config.KingKongWarSceneConfig")
    --local sceneConfig = {}
    --if Config.Debug then
    --    table.merge(sceneConfig, getmetatable(self.global_SceneConfig))
    --    table.merge(sceneConfig, getmetatable(self.kingKongWarGlobal_SceneConfig))
    --end
    --table.merge(sceneConfig, (self.global_SceneConfig))
    --table.merge(sceneConfig, (self.kingKongWarGlobal_SceneConfig))
    --for key, value in pairs(sceneConfig) do
    --    if string.startswith(key, "__") then
    --        sceneConfig[key] = nil
    --    end
    --end
    ----Logger.Log(table.dump(sceneConfig))
    --
    --SceneConfig = ConstClass("SceneConfig", sceneConfig)
    --
    --
    ----合并UIWindowsNames
    --self.global_UIWindowNames = UIWindowNames
    --self.kingKongWarGlobal_UIWindowNames = require("MiniGames.KingKongWar.UI.Config.KingKongWarUIWindowNames")
    --local uiWindowNames = {}
    --table.merge(uiWindowNames, self.global_UIWindowNames)
    --table.merge(uiWindowNames, self.kingKongWarGlobal_UIWindowNames)
    --if Config.Debug then
    --    table.merge(uiWindowNames, getmetatable(self.global_UIWindowNames))
    --    table.merge(uiWindowNames, getmetatable(self.kingKongWarGlobal_UIWindowNames))
    --end
    --for key, value in pairs(uiWindowNames) do
    --    if string.startswith(key, "__") then
    --        uiWindowNames[key] = nil
    --    end
    --end
    ----Logger.Log(table.dump(uiWindowNames))
    --
    --UIWindowNames = ConstClass("UIWindowNames", uiWindowNames)
    --
    --
    ----合并UIConfig
    --self.global_UIConfig = UIConfig
    --self.kingKongWarUIConfig = require("MiniGames.KingKongWar.UI.Config.KingKongWarUIConfig")
    --local uiConfig = {}
    --table.merge(uiConfig, self.global_UIConfig)
    --table.merge(uiConfig, self.kingKongWarUIConfig)
    --if Config.Debug then
    --    table.merge(uiConfig, getmetatable(self.global_UIConfig))
    --    table.merge(uiConfig, getmetatable(self.kingKongWarUIConfig))
    --end
    --for key, value in pairs(uiConfig) do
    --    if string.startswith(key, "__") then
    --        uiConfig[key] = nil
    --    end
    --end
    --UIConfig = ConstClass("UIConfig", uiConfig)
    --
    ----合并数据消息 DataMessageNames
    --self.global_DataMessageNames = DataMessageNames
    --self.kingKongWarDataMessageNames = require("MiniGames.KingKongWar.DataCenter.Config.DataMessageNames")
    --local dataMessageNames = {}
    --table.merge(dataMessageNames, self.global_DataMessageNames)
    --table.merge(dataMessageNames, self.kingKongWarDataMessageNames)
    --if Config.Debug then
    --    table.merge(dataMessageNames, getmetatable(self.global_DataMessageNames))
    --    table.merge(dataMessageNames, getmetatable(self.kingKongWarDataMessageNames))
    --end
    --for key, value in pairs(dataMessageNames) do
    --    if string.startswith(key, "__") then
    --        dataMessageNames[key] = nil
    --    end
    --end
    --DataMessageNames = ConstClass("DataMessageNames", dataMessageNames)
    --
    ----合并UI通知 UIMessageNames
    --self.global_UIMessageNames = UIMessageNames
    --self.kingKongWarUIMessageNames = require("MiniGames.KingKongWar.UIMessage.UIMessageNames")
    --local uiMessageNames = {}
    --table.merge(uiMessageNames, self.global_UIMessageNames)
    --table.merge(uiMessageNames, self.kingKongWarUIMessageNames)
    --if Config.Debug then
    --    table.merge(uiMessageNames, getmetatable(self.global_UIMessageNames))
    --    table.merge(uiMessageNames, getmetatable(self.kingKongWarUIMessageNames))
    --end
    --for key, value in pairs(uiMessageNames) do
    --    if string.startswith(key, "__") then
    --        uiMessageNames[key] = nil
    --    end
    --end
    --UIMessageNames = ConstClass("UIMessageNames", uiMessageNames)
    --

    self:merge()

    --其他
    UIBloodView = require("MiniGames.KingKongWar.UI.UIGamingLayoutPanel.View.UIBloodView")
    PlayerDataClass = require("MiniGames.KingKongWar.UI.UIGamingLayoutPanel.Model.PlayerData")
end

function KingKongWarGlobal:Leave()
    --SceneConfig = self.global_SceneConfig
    --UIConfig = self.global_UIConfig
    --UIWindowNames = self.global_UIWindowNames
    --DataMessageNames = self.global_DataMessageNames
    --UIMessageNames = self.global_UIMessageNames
    self:mergeReset()

    UIBloodView = nil
    PlayerDataClass = nil
end

function KingKongWarGlobal:mergeReset()
    for _, merge in ipairs(mergeTable) do
        _G[merge.name] = self["global_" .. merge.name]
    end
end

function KingKongWarGlobal:merge()
    for _, merge in ipairs(mergeTable) do
        self["global_" .. merge.name] = merge.global
        local selfClassObj = require(merge.selfClass)
        local tempTable = {}
        table.merge(tempTable, merge.global)
        table.merge(tempTable, selfClassObj)
        if Config.Debug then
            table.merge(tempTable, getmetatable(merge.global))
            table.merge(tempTable, getmetatable(selfClassObj))
        end
        for key, value in pairs(tempTable) do
            if string.startswith(key, "__") then
                tempTable[key] = nil
            end
        end
        _G[merge.name] = ConstClass(merge.name, tempTable)
    end
end

return KingKongWarGlobal